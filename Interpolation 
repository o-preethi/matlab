%% Interpolation Example in MATLAB

% Original signal
Fs = 1000;                 % Original sampling frequency
t = 0:1/Fs:1;              % Time vector (1 second)
x = sin(2*pi*50*t);        % 50 Hz sine wave

% Interpolation factor
L = 4;                     % Upsample by factor of 4

%% Method 1: Manual Interpolation (Upsample + Low-pass Filter)

% Step 1: Upsample by inserting zeros
x_up = upsample(x, L);     % Insert L-1 zeros between samples
Fs_up = Fs * L;            % New sampling rate
t_up = (0:length(x_up)-1)/Fs_up;

% Step 2: Low-pass filter to smooth inserted zeros
% Use FIR filter design (low-pass)
N = 64;                    % Filter order
h = fir1(N, 1/L);          % Cutoff = 1/L of Nyquist to avoid imaging
x_interp_manual = conv(x_up, h, 'same');  % Filtered signal

%% Method 2: Using MATLABâ€™s interp() function
x_interp_builtin = interp(x, L);          % Includes upsampling + filtering
t_interp_builtin = (0:length(x_interp_builtin)-1)/Fs_up;

%% Plot
figure;
subplot(3,1,1);
plot(t, x, 'b.-');
title('Original Signal'); xlabel('Time (s)'); ylabel('Amplitude');

subplot(3,1,2);
plot(t_up, x_interp_manual, 'r');
title(['Interpolated Signal (Manual, L = ' num2str(L) ')']);
xlabel('Time (s)'); ylabel('Amplitude');

subplot(3,1,3);
plot(t_interp_builtin, x_interp_builtin, 'g');
title(['Interpolated Signal using interp() (L = ' num2str(L) ')']);
xlabel('Time (s)'); ylabel('Amplitude');